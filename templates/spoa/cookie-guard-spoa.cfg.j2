{% set spoa = spoa if spoa is defined else spoa_item.value %}
[{{ spoa.section | default('cookie-guard') }}]
spoe-agent {{ spoa.agent_name | default('cookie-guard') }}
    option var-prefix {{ spoa.var_prefix | default('cookieguard') }}
{% set default_groups = ['issue-token', 'verify-token'] %}
    groups {{ spoa.groups | default(default_groups) | join(' ') }}
{% if spoa.option_pipelining | default(True) %}
    option pipelining
{% endif %}
    timeout hello      {{ spoa.timeout_hello | default('2s') }}
    timeout idle       {{ spoa.timeout_idle | default('30s') }}
    timeout processing {{ spoa.timeout_processing | default('2s') }}
    use-backend {{ spoa.backend.name }}
    log global

{% set default_messages = [
  {'name': 'issue-token', 'args': 'src-ip=src ua=req.hdr(User-Agent),lower'},
  {'name': 'verify-token', 'args': 'src-ip=src ua=req.hdr(User-Agent),lower cookie=req.cook(hb_v2)'}
] %}
{% for message in spoa.messages | default(default_messages) %}
spoe-message {{ message.name }}
    args {{ message.args }}
{% if message.event is defined %}
    event {{ message.event }}
{% endif %}

{% endfor %}
{% set default_group_defs = [
  {'name': 'issue-token', 'messages': ['issue-token']},
  {'name': 'verify-token', 'messages': ['verify-token']}
] %}
{% for group in spoa.group_definitions | default(default_group_defs) %}
spoe-group {{ group.name }}
    messages {{ group.messages | join(' ') }}

{% endfor %}
{% if spoa.extra_config is defined %}
{{ spoa.extra_config }}
{% endif -%}

backend {{ spoa.backend.name }}
    mode {{ spoa.backend.mode | default('tcp') }}
    balance {{ spoa.backend.balance | default('roundrobin') }}
{% for server in spoa.backend.servers | default([]) %}
    server {{ server.name }} {{ server.address }}:{{ server.port }}{% if server.options is defined and server.options | length > 0 %} {{ server.options }}{% endif %}
{% endfor %}
{% for line in spoa.backend.extra_lines | default([]) %}
    {{ line }}
{% endfor %}
