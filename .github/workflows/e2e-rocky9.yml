name: rocky9-e2e

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  e2e-rocky9:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      TERM: xterm-256color
      CLICOLOR_FORCE: "1"
      ANSIBLE_FORCE_COLOR: "true"
      PYTHONUNBUFFERED: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install virtualization tooling
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            qemu-kvm \
            qemu-utils \
            cloud-image-utils \
            sshpass \
            netcat-openbsd \
            python3 \
            python3-venv \
            python3-pip \
            curl \
            git \
            tar \
            gzip

      - name: Enable KVM device access
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          sudo chmod 666 /dev/kvm || true

      - name: Set up Python and Ansible
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install ansible-core==2.15.9 ansible==8.7.0

      - name: Run end-to-end tests on Rocky 9 VM
        env:
          ANSIBLE_STDOUT_CALLBACK: debug
        run: |
          source .venv/bin/activate
          export ANSIBLE_ROLES_PATH="$(dirname "${GITHUB_WORKSPACE}"):${HOME}/.ansible/roles"
          tests/e2e/run_e2e.sh

      - name: Ensure VM shutdown
        if: always()
        run: |
          tests/e2e/stop_vm.sh || true

      - name: Upload artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: rocky9-debug
          path: |
            tests/e2e/artifacts
          if-no-files-found: ignore
